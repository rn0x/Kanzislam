extends ../partials/layout.pug

block stylesheet
  link(rel="stylesheet" href="/css/adhkar.css")

block content
  #adhkarPage 
    ul.breadcrumb
      li 
        a(href="/" title="الصفحة الرئيسية" aria-label="العودة إلى الصفحة الرئيسية") 
          i.fa-solid.fa-house-chimney.iconBreadcrumb 
      li 
        small /
        a(href="/adhkar" title="أذكار" aria-label="الانتقال إلى أذكار") أذكار
      li 
        small /
        a(href='#' id="breadcrumbCategory" title="فئة الأذكار" aria-label="الفئة الحالية للأذكار")
      li 
        small /
        a(href='#' id="breadcrumbTitle" title="عنوان الأذكار" aria-label="عنوان الأذكار الحالية")
    h1#titleAdhkar(aria-label="عنوان الأذكار") 
    #adhkarsBox 
      .repetition#repetition(aria-label="عدد التكرارات للأذكار")
        p#repetition_p(aria-label="عدد التكرارات") 
        i.fa-solid.fa-rotate-left.repetitionIcon#repetition_icon(title="إعادة التكرار" aria-label="إعادة التكرار للأذكار")
      .adhkar_text#adhkar_text(aria-label="نص الأذكار")
        h3#adhkarContent(aria-label="محتوى الأذكار")
        p#adhkarDescription(aria-label="وصف الأذكار")
        small#adhkarSource(aria-label="مصدر الأذكار")

block script
  script(type="module"). 
    import filterSpan from '/js/modules/filterSpan.js';

    const loading = document.getElementById("loading");
    loading.style.display = "block";
    const adhkarsBox = document.getElementById("adhkarsBox");
    adhkarsBox.style.display = "none";
    const options = !{JSON.stringify(options)};  // تحويل خصائص options إلى كائن JSON
    const adhkarJson = await dataAdhkar();
    const AdhkarObject = Object.values(adhkarJson).flatMap(item => item.array.filter(subItem => subItem.title.split(" ").join("_") === options.pathname).map(subItem => ({ category: item.category, ...subItem })))?.[0];

    if (!AdhkarObject) {
      window.location = "/404";
    }

    const repetition = document.getElementById("repetition");
    const repetition_icon = document.getElementById("repetition_icon");
    const repetition_p = document.getElementById("repetition_p");
    const adhkarContent = document.getElementById("adhkarContent");
    const adhkarDescription = document.getElementById("adhkarDescription");
    const adhkarSource = document.getElementById("adhkarSource");

    repetition_p.innerText = AdhkarObject.repetition;
    repetition_p.title = AdhkarObject.repetition;
    repetition_p.ariaLabel = AdhkarObject.repetition;
    adhkarContent.innerText = AdhkarObject.adhkar;
    adhkarContent.title = AdhkarObject.adhkar;
    adhkarContent.ariaLabel = AdhkarObject.adhkar;
    adhkarDescription.innerText = AdhkarObject.description;
    adhkarSource.innerText = AdhkarObject.source;
    adhkarSource.title = AdhkarObject.source;
    adhkarSource.ariaLabel = AdhkarObject.source;

    // Initially set the reset button to disabled since counter is at full value
    updateResetButtonState();

    const breadcrumbCategory = document.getElementById("breadcrumbCategory");
    breadcrumbCategory.innerText = AdhkarObject.category;
    breadcrumbCategory.title = AdhkarObject.category;
    breadcrumbCategory.ariaLabel = AdhkarObject.category;
    breadcrumbCategory.href = `/adhkar/${AdhkarObject.category.split(" ").join("_")}`;

    const breadcrumbTitle = document.getElementById("breadcrumbTitle");
    breadcrumbTitle.innerText = AdhkarObject.title;
    breadcrumbTitle.title = AdhkarObject.title;
    breadcrumbTitle.ariaLabel = AdhkarObject.title;
    breadcrumbTitle.href = `/adhkars/${AdhkarObject.title.split(" ").join("_")}`;
    breadcrumbTitle.style = `white-space: normal;`;

    const titleAdhkar = document.getElementById("titleAdhkar");
    titleAdhkar.innerText = AdhkarObject.title;

    repetition.addEventListener("click", function(event) {
      // Prevent any default behavior
      event.preventDefault();
      
      // Handle click on counter
      decrementCounter();
    });

    // Also add touchend event for mobile devices
    repetition.addEventListener("touchend", function(event) {
      // Prevent any default behavior and immediate propagation
      event.preventDefault();
      event.stopPropagation();
      
      // Handle touch on counter
      decrementCounter();
    }, { passive: false });

    repetition_icon.addEventListener("click", function(event) {
      // Only process if the button is not disabled
      if (!repetition_icon.classList.contains('disabled')) {
        event.stopPropagation();
        event.preventDefault();
        resetCounter();
      }
    });

    // Also add touchend event for the reset icon
    repetition_icon.addEventListener("touchend", function(event) {
      // Only process if the button is not disabled
      if (!repetition_icon.classList.contains('disabled')) {
        event.stopPropagation();
        event.preventDefault();
        resetCounter();
      }
    }, { passive: false });

    // Helper function to decrement counter
    function decrementCounter() {
      if (parseInt(repetition_p.textContent) > 0) {
        const value = parseInt(repetition_p.textContent) - 1;
        repetition_p.textContent = value;
        if (parseInt(repetition_p.textContent) === 0) {
          repetition.style.backgroundColor = "#fad1d1";
        }
        let GetAdhkarRepeat = localStorage.getItem("adhkarRepeat");
        if (!GetAdhkarRepeat || isNaN(GetAdhkarRepeat)) {
          GetAdhkarRepeat = 0;
        }
        localStorage.setItem("adhkarRepeat", parseInt(GetAdhkarRepeat) + 1);
        
        // Enable reset button as counter is decremented
        repetition_icon.classList.remove('disabled');
      }
    }

    // Helper function to reset counter
    function resetCounter() {
      repetition_p.textContent = AdhkarObject?.repetition;
      repetition_p.title = AdhkarObject?.repetition;
      repetition_p.ariaLabel = AdhkarObject?.repetition;
      repetition.style.backgroundColor = "";
      
      // Disable reset button after reset
      updateResetButtonState();
    }
    
    // Function to update reset button state
    function updateResetButtonState() {
      if (parseInt(repetition_p.textContent) === parseInt(AdhkarObject?.repetition)) {
        repetition_icon.classList.add('disabled');
      } else {
        repetition_icon.classList.remove('disabled');
      }
    }

    adhkarsBox.style.display = "flex";

    async function dataAdhkar() {
      const adhkarURL = `${window.location.origin}/data-adhkar`;
      const adhkarFetch = await fetch(adhkarURL, {
        method: "GET",
        headers: {
          'Content-Type': 'application/json',
        }
      });

      if (!adhkarFetch.ok) {
        console.log(`HTTP error! Status: ${adhkarFetch.status}`);
        return false;
      }

      const response = await adhkarFetch?.json();
      return response;
    }

    loading.style.display = "none";